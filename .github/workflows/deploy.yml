name: CI/CD Pipeline for ejercicio calculadora ampliada - Tema 5

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'

    - name: Install dependencies
      run: composer install

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'

    - name: Install dependencies
      run: composer install

    - name: Debug SSH key
      run: |
        echo "$SSH_PRIVATE_KEY" | awk '{print NR, $0}'
      env:
        SSH_PRIVATE_KEY: ${{ secrets.REMOTE_KEY }}

    - name: Deploy to server 
      env: 
        SSH_PRIVATE_KEY: ${{ secrets.REMOTE_KEY }} 
        HOST: ${{ secrets.REMOTE_HOST }} 
        USERNAME: ${{ secrets.REMOTE_USER }} 
        DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }} 
      run: |
        mkdir -p ~/.ssh 
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa 
        chmod 600 ~/.ssh/id_rsa 
        ssh-keyscan -H $HOST >> ~/.ssh/known_hosts

        # Crear el directorio de despliegue en el servidor
        ssh -o StrictHostKeyChecking=no $USERNAME@$HOST "mkdir -p $DEPLOY_PATH" 

        # Sincronizar archivos
        rsync -avz --delete --exclude 'vendor' --exclude '.git' . $USERNAME@$HOST:$DEPLOY_PATH 

        # Ejecutar Composer en el servidor
        ssh -o StrictHostKeyChecking=no $USERNAME@$HOST "cd $DEPLOY_PATH && composer install --no-dev --optimize-autoloader" 

        # Reiniciar Apache
        ssh -o StrictHostKeyChecking=no $USERNAME@$HOST "sudo systemctl restart apache2"

    - name: Log in to DockerHub 
      uses: docker/login-action@v2 
      with: 
        username: ${{ secrets.DOCKER_USERNAME}} 
        password: ${{ secrets.DOCKER_PASSWORD}} 

    # Paso cd php: entrar al directorio php antes de construir la imagen Docker
    - name: Build and push PHP Docker image 
      run: | 
        cd php  # Entrar al directorio PHP
        docker build -t ${{ secrets.DOCKER_USERNAME }}/mi_app_cine:v1 . 
        docker push ${{ secrets.DOCKER_USERNAME }}/mi_app_cine:v1

    # Paso cd mysql: entrar al directorio mysql antes de construir la imagen Docker
    - name: Build and push MySQL Docker image
      run: |
        cd mysql  # Entrar al directorio MySQL
        docker build -t ${{ secrets.DOCKER_USERNAME }}/mi_cine:v1 .
        docker push ${{ secrets.DOCKER_USERNAME }}/mi_cine:v1

    - name: Transfer compose.yml to remote server 
      uses: appleboy/scp-action@master 
      with: 
        host: ${{ secrets.REMOTE_HOST }} 
        username: ${{ secrets.REMOTE_USER }} 
        key: ${{ secrets.REMOTE_KEY }} 
        source: ./compose.yml 
        target: ~/deploy/ 

    - name: Deploy with Docker Compose 
      uses: appleboy/ssh-action@master 
      with: 
        host: ${{ secrets.REMOTE_HOST }} 
        username: ${{ secrets.REMOTE_USER }} 
        key: ${{ secrets.REMOTE_KEY }} 
        script: | 
          cd ~/deploy 
          sudo chmod 666 /var/run/docker.sock 
          docker compose down || true 
          docker compose pull 
          docker compose up -d